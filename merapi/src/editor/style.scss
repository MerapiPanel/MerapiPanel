@use "sass:color";

$primaryColor:      #ffffff !default;
$secondaryColor:    #323232 !default;
$tertiaryColor:     #1491da !default;
$quaternaryColor:   #3d8ad6 !default;

$app-prefix: "merapi__editor-";

@mixin customScrollbar($width: 8px, $rounded: 0, $thumbColor: #0080ff, $trackColor: transparent) {
    & {
        scrollbar-width: #{$width} !important;
    }
    &::-webkit-scrollbar {
        width: #{$width} !important;
    }

    &::-webkit-scrollbar-track {
        width: #{$width} !important;
        background: #{$trackColor};
    }

    &::-webkit-scrollbar-thumb {
        width: #{$width} !important;
        background-color: #{$thumbColor};
        border-radius: #{$rounded};
    }

    $darken: color.adjust($thumbColor, $lightness: -10%);

    &::-webkit-scrollbar-thumb:hover {
        background-color: #{$darken};
    }

    &::-webkit-scrollbar-thumb:active {
        background-color: #{$darken};
    }
}

@import "../../../node_modules/grapesjs/src/styles/scss/main.scss";

/* Reset some default styling */
.#{$app-prefix}editor {
    background: transparent !important;
    background-color: transparent !important;

    & .#{$app-prefix}cv-canvas {
        top: 0;
        width: 100%;
        height: 100%;
        background: transparent !important;
        background-color: transparent !important;
    }
}
.#{$app-prefix}block {
    width: auto;
    height: auto;
    min-height: auto;
}

.merapi__editor {
    display: flex;
    flex-direction: column;
    height: 100vh;
    width: 100vw;

    &--layout {
        position: initial;
        box-shadow: 0 3px 2px -2px rgba(0, 0, 0, 0.1);
        background: white;
        &.layout {
            &-top {
                flex-basis: 40px;
                padding: 0;
                width: 100%;
                display: flex;
                justify-content: center;
                justify-content: space-between;
            }
            &-right {
                flex-basis: 380px;
                position: relative;
                overflow-y: auto;
                overflow-x: visible;
                box-shadow: -3px 0 2px -2px rgba(0, 0, 0, 0.1);
            }
            &-left {
                position: relative;
                flex-basis: 220px;
                overflow-y: auto;
                overflow-x: hidden;
                box-shadow: 3px 0 2px -2px rgba(0, 0, 0, 0.1);
            }
        }

        &-row {
            display: flex;
            justify-content: flex-start;
            align-items: stretch;
            flex-wrap: nowrap;
            flex-grow: 1;
            overflow: hidden;

            & .layout__panel-editor {
                flex-grow: 1;
                margin: 0.25rem;
                padding: 0.25rem;

                // & .sp-container {
                //     position: fixed !important;
                //     top: 50% !important;
                //     right: 0 !important;
                //     left: unset !important;
                //     transform: translateY(-50%) !important;
                //     width: max-content;
                //     height: max-content;
                // }
            }
        }
    }
    &--panel {
        position: relative;
    }

    & .editor__canvas {
        padding: 0.25rem;
    }
}

.container__editor {
    display: flex;
    flex-direction: column;
    height: 100vh;
    width: 100vw;

    & div {
        @include customScrollbar(8px, 15px, #86c2ff, #eeeeee00);
    }

    & .layout {
        &__panel {
            &-top {
            }
            &-right {
                flex-basis: 380px;
                position: relative;
                overflow-y: auto;
                overflow-x: visible;
                box-shadow: -3px 0 2px -2px rgba(0, 0, 0, 0.1);
            }
            &-left {
                position: relative;
                flex-basis: 220px;
                overflow-y: auto;
                overflow-x: hidden;
                box-shadow: 3px 0 2px -2px rgba(0, 0, 0, 0.1);
                & .layers-breadcrumb {
                    position: fixed;
                    bottom: 0;
                    user-select: none;
                    z-index: 20;

                    & .component-name {
                        font-weight: 700;
                        color: #164e9b;
                    }
                    & .component-class {
                        font-weight: 600;
                        color: #9c7e13;
                    }
                }
            }
            &-row {
                display: flex;
                justify-content: flex-start;
                align-items: stretch;
                flex-wrap: nowrap;
                flex-grow: 1;
                overflow: hidden;

                & .layout__panel-editor {
                    flex-grow: 1;
                    margin: 0.25rem;
                    padding: 0.25rem;

                    // & .sp-container {
                    //     position: fixed !important;
                    //     top: 50% !important;
                    //     right: 0 !important;
                    //     left: unset !important;
                    //     transform: translateY(-50%) !important;
                    //     width: max-content;
                    //     height: max-content;
                    // }
                }
            }
        }

        &-closed {
            transition: 0.25s;
            max-width: 0px;
            overflow: hidden;
            padding-left: 0;
            padding-right: 0;
        }

        &-opened {
            transition: 0.25s;
            max-width: 220px;
        }
    }

    & .panel {
        &__initial {
            position: initial;
        }
    }

    & .container {
        &-styles {
            position: relative;
            display: flex;
            flex-direction: column-reverse;
        }

        &-traits {
            padding-top: 0.8rem;
            position: relative;
            display: flex;
            flex-direction: column-reverse;
        }

        &-layers {
            position: relative;
            display: flex;
            flex-direction: column-reverse;
        }

        &-selected {
            position: relative;
            display: flex;
            flex-direction: row;
            align-items: end;
            padding: 0.75rem 0.5rem;
            padding-bottom: 0;

            & .component-name {
                font-weight: 700;
                color: #{$tertiaryColor};
                margin-bottom: 0.35rem;
                margin-left: 0.35rem;
                text-transform: uppercase;
            }
            & .component-icon {
                margin: 0.15rem;
                color: #{$tertiaryColor};
            }
        }
    }

    & .color-picker {
        border: 1px solid rgb(0, 0, 0, 0.1);
        background-color: lighten($color: $tertiaryColor, $amount: 33%);
        box-shadow: 0 0 4px rgb(0, 0, 0, 0.1);
        z-index: 15;
        & .sp-palette-container {
            display: none;
        }
        & .sp-button-container {
            & * {
                border-radius: 0 !important;
                border: 1px solid rgb(0, 0, 0, 0.1) !important;
                line-height: 1rem !important;
                padding: 0.2rem 1.2rem !important;
                background: none;
                text-transform: uppercase;
                font-size: small;
                font-family: monospace, sans-serif;
                text-decoration: none;
                &:hover {
                    background-color: #{$tertiaryColor};
                }
            }
        }
    }
    & .gjs {
        &-sm {
        }
        &-field {
            &-arrows {
                z-index: 1;
            }
        }
    }
}

/* Theming */

:root {
    --gjs-main-color: #{$primaryColor};
    --gjs-main-dark-color: #{adjust-color($primaryColor, $lightness: -5%)};
    --gjs-primary-color: #{$primaryColor};
    --gjs-secondary-color: #{$secondaryColor};
    --gjs-tertiary-color: #{$tertiaryColor};
    --gjs-quaternary-color: #{$tertiaryColor};
    --gjs-arrow-color: #{$secondaryColor};
    --gjs-font-color: #{$secondaryColor};
}

@mixin field {
    background-color: #ffffff;
    color: #{$secondaryColor} !important;
    border: 1px solid rgba(0, 0, 0, 0.25);
}

@mixin color-plete($name: "one", $color) {
    &-#{$name} {
        &-color {
            color: #{$color};
        }
        &-bg {
            background-color: #{$color};
            @if lightness($color) > 75% {
                color: #2c2c2c;
            } @else {
                color: #ffffff;
            }
        }
    }
}

.gjs {
    @include color-plete(one, $primaryColor);
    @include color-plete(two, $secondaryColor);
    @include color-plete(three, $tertiaryColor);

    &-sm-sector {
        background-color: lighten($color: $tertiaryColor, $amount: 33%);
        border-bottom: none !important;

        &-title {
            background-color: #{$tertiaryColor};
            color: #fff;
        }
    }

    &-field {
        &:has(:not(input, select)),
        &:empty {
            @include field;
        }
        & input,
        select {
            color: #{$secondaryColor};
        }

        &s {
            & .gjs-field {
                @include field;

                & input,
                select {
                    border: none !important;
                }
            }
        }
    }

    &-layer {
        $r: red($tertiaryColor);
        $g: green($tertiaryColor);
        $b: blue($tertiaryColor);

        &-item {
            background-color: #{darken($color: $tertiaryColor, $amount: 25%)};
            color: #fff;
            border-bottom: 0px !important;

            &:hover {
                background-color: adjust-color($color: $tertiaryColor, $lightness: -50%, $alpha: -0.5) !important;
                color: #fff !important;
            }
        }
        &-children {
            border-left: 5px solid #{darken($color: $tertiaryColor, $amount: 25%)};
            & .gjs-layer-item {
                background-color: rgb($r, $g, $b, 0.2);
                color: rgb(51, 51, 51);
            }
            &:has(.gjs-hovered) {
                $color: darken(
                    $color: $tertiaryColor,
                    $amount: 25%
                );
                $r: red($color);
                $g: green($color);
                $b: blue($color);

                & .gjs-selected {
                    & .gjs-layer-item {
                        background-color: rgb($r, $g, $b, 0.25) !important;
                    }
                }
            }
        }

        &.gjs-selected {
            & .gjs-layer-item {
                background-color: #{$tertiaryColor};
                color: rgb(255, 255, 255);
            }
            & .gjs-layer-children {
                & .gjs-layer-item {
                    background-color: rgb($r, $g, $b, 0.05);
                    color: rgb(51, 51, 51);
                }
            }
        }
        &.gjs-hovered {
            & .gjs-layer {
                &-item {
                    background-color: #{$tertiaryColor} !important;
                    color: #fff !important;
                }
                &-children {
                    & .gjs-layer-item {
                        background-color: rgb($r, $g, $b, 0.2) !important;
                        color: #fff !important;
                    }
                }
            }
        }
    }
}

.loading {
    &-screen {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: #fff;
        z-index: 900;
        transition: 1s;
        opacity: 1;

        &.hide {
            opacity: 0;
        }
    }
    &-progress {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        & .progressbar {
            --MP-loading-width: 0%;
            width: 400px;
            height: 7px;
            background-color: #ccc;
            border-radius: 5px;
            position: relative;
            overflow: hidden;
            animation: 600ms linear 0s infinite normal none running loading_progress-blink;
            &::before {
                content: "";
                display: block;
                position: absolute;
                top: 0;
                left: 0;
                width: var(--MP-loading-width);
                height: 100%;
                background-color: #333;
                animation: progress 2s linear infinite;
                transition: 0.5s;
            }
        }
        @keyframes loading_progress-blink {
            from {
                background-color: #ccc;
            }
            to {
                background-color: #ebebeb;
            }
        }
    }
}
