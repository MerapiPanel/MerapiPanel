"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmerapipanel"] = self["webpackChunkmerapipanel"] || []).push([["merapi_src__editor_js"],{

/***/ "./merapi/src/_editor.js":
/*!*******************************!*\
  !*** ./merapi/src/_editor.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var grapesjs_dist_css_grapes_min_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grapesjs/dist/css/grapes.min.css */ \"./node_modules/grapesjs/dist/css/grapes.min.css\");\n/* harmony import */ var grapesjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! grapesjs */ \"./node_modules/grapesjs/dist/grapes.mjs\");\n/* provided dependency */ var $ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery-exposed.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n// import \"./editor/style.scss\";\n\nvar MP_Editor = {\n  init: function init(options) {\n    var element, editor;\n    Object.defineProperty(this, \"element\", {\n      get: function get() {\n        return element[0];\n      },\n      set: function set(value) {\n        element = $(value);\n      }\n    });\n    Object.defineProperty(this, \"editor\", {\n      get: function get() {\n        return editor;\n      }\n    });\n\n    // set element fisrt\n    this.element = $(options.selector);\n\n    // init grapesjs\n    editor = grapesjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].init({\n      container: this.element,\n      fromElement: true,\n      height: '100%',\n      storageManager: false,\n      deviceManager: {\n        devices: [{\n          name: 'Desktop',\n          width: '1280px' // default size\n        }, {\n          name: 'Tablet',\n          width: '768px',\n          // this value will be used on canvas width\n          widthMedia: '1024px' // this value will be used in CSS @media\n        }, {\n          name: 'Mobile',\n          width: '320px',\n          // this value will be used on canvas width\n          widthMedia: '480px' // this value will be used in CSS @media\n        }]\n      },\n      layerManager: {\n        appendTo: '.layers-container',\n        showAllButton: true\n      },\n      panels: {\n        defaults: [{\n          id: 'panel-left',\n          el: '.panel__left',\n          resizable: {\n            maxDim: 350,\n            minDim: 200,\n            tc: 0,\n            // Top handler\n            cl: 1,\n            // Left handler\n            cr: 0,\n            // Right handler\n            bc: 0,\n            // Bottom handler\n            // Being a flex child we need to change `flex-basis` property\n            // instead of the `width` (default)\n            keyWidth: 'flex-basis'\n          }\n        }, {\n          id: 'panel-right',\n          el: '.panel__right'\n        },\n        // ...\n        {\n          id: 'panel-switcher',\n          el: '.panel__switcher',\n          buttons: [{\n            id: 'show-style',\n            active: true,\n            label: '<i class=\"fa-solid fa-paint-roller\"></i>',\n            command: 'show-styles',\n            togglable: false\n          }, {\n            id: 'show-traits',\n            active: true,\n            label: '<i class=\"fa-solid fa-gears\"></i>',\n            command: 'show-traits',\n            togglable: false\n          }]\n        }, {\n          id: 'panel-devices',\n          el: '.panel__devices',\n          buttons: [{\n            id: 'device-desktop',\n            label: '<i class=\"fa-solid fa-desktop\"></i>',\n            command: 'set-device-desktop',\n            active: true,\n            togglable: false\n          }, _defineProperty({\n            id: 'device-tablet',\n            label: '<i class=\"fa-solid fa-tablet\"></i>',\n            command: 'set-device-tablet',\n            togglable: false\n          }, \"togglable\", false), {\n            id: 'device-mobile',\n            label: '<i class=\"fa-solid fa-mobile\"></i>',\n            command: 'set-device-mobile',\n            togglable: false\n          }]\n        }]\n      },\n      // The Selector Manager allows to assign classes and\n      // different states (eg. :hover) on components.\n      // Generally, it's used in conjunction with Style Manager\n      // but it's not mandatory\n      selectorManager: {\n        appendTo: '.styles-container'\n      },\n      styleManager: {\n        appendTo: '.styles-container',\n        sectors: [{\n          name: 'Dimension',\n          open: false,\n          // Use built-in properties\n          buildProps: ['width', 'min-height', 'padding'],\n          // Use `properties` to define/override single property\n          properties: [{\n            // Type of the input,\n            // options: integer | radio | select | color | slider | file | composite | stack\n            type: 'integer',\n            name: 'The width',\n            // Label for the property\n            property: 'width',\n            // CSS property (if buildProps contains it will be extended)\n            units: ['px', '%'],\n            // Units, available only for 'integer' types\n            defaults: 'auto',\n            // Default value\n            min: 0 // Min value, available only for 'integer' types\n          }]\n        }, {\n          name: 'Extra',\n          open: false,\n          buildProps: ['background-color', 'box-shadow', 'custom-prop'],\n          properties: [{\n            id: 'custom-prop',\n            name: 'Custom Label',\n            property: 'font-size',\n            type: 'select',\n            defaults: '32px',\n            // List of options, available only for 'select' and 'radio'  types\n            options: [{\n              value: '12px',\n              name: 'Tiny'\n            }, {\n              value: '18px',\n              name: 'Medium'\n            }, {\n              value: '32px',\n              name: 'Big'\n            }]\n          }]\n        }]\n      },\n      traitManager: {\n        appendTo: '.traits-container'\n      }\n    });\n    editor.Panels.addPanel({\n      id: 'panel-top',\n      el: '.panel__top'\n    });\n    editor.Panels.addPanel({\n      id: 'basic-actions',\n      el: '.panel__basic-actions',\n      buttons: [{\n        id: 'visibility',\n        active: true,\n        // active by default\n        className: 'btn-toggle-borders',\n        label: '<i class=\"fa-solid fa-border-top-left\"></i>',\n        command: 'sw-visibility' // Built-in command\n      }, {\n        id: 'export',\n        className: 'btn-open-export',\n        label: '<i class=\"fa-solid fa-code\"></i>',\n        command: 'export-template',\n        context: 'export-template' // For grouping context of buttons from the same panel\n      }, {\n        id: 'show-json',\n        className: 'btn-show-json',\n        label: 'JSON',\n        context: 'show-json',\n        command: function command(editor) {\n          editor.Modal.setTitle('Components JSON').setContent(\"<textarea style=\\\"width:100%; height: 250px;\\\">\\n                      \".concat(JSON.stringify(editor.getComponents()), \"\\n                    </textarea>\")).open();\n        }\n      }]\n    });\n\n    // Define commands\n    editor.Commands.add('show-layers', {\n      getRowEl: function getRowEl(editor) {\n        return editor.getContainer().closest('.editor-row');\n      },\n      getLayersEl: function getLayersEl(row) {\n        return row.querySelector('.layers-container');\n      },\n      run: function run(editor, sender) {\n        var lmEl = this.getLayersEl(this.getRowEl(editor));\n        lmEl.style.display = '';\n      },\n      stop: function stop(editor, sender) {\n        var lmEl = this.getLayersEl(this.getRowEl(editor));\n        lmEl.style.display = 'none';\n      }\n    });\n    editor.Commands.add('show-styles', {\n      getRowEl: function getRowEl(editor) {\n        return editor.getContainer().closest('.editor-row');\n      },\n      getStyleEl: function getStyleEl(row) {\n        return row.querySelector('.styles-container');\n      },\n      run: function run(editor, sender) {\n        var smEl = this.getStyleEl(this.getRowEl(editor));\n        smEl.style.display = '';\n      },\n      stop: function stop(editor, sender) {\n        var smEl = this.getStyleEl(this.getRowEl(editor));\n        smEl.style.display = 'none';\n      }\n    });\n    editor.Commands.add('show-traits', {\n      getTraitsEl: function getTraitsEl(editor) {\n        var row = editor.getContainer().closest('.editor-row');\n        return row.querySelector('.traits-container');\n      },\n      run: function run(editor, sender) {\n        this.getTraitsEl(editor).style.display = '';\n      },\n      stop: function stop(editor, sender) {\n        this.getTraitsEl(editor).style.display = 'none';\n      }\n    });\n\n    // Commands\n    editor.Commands.add('set-device-desktop', {\n      run: function run(editor) {\n        return editor.setDevice('Desktop');\n      }\n    });\n    editor.Commands.add('set-device-tablet', {\n      run: function run(editor) {\n        return editor.setDevice('Tablet');\n      }\n    });\n    editor.Commands.add('set-device-mobile', {\n      run: function run(editor) {\n        return editor.setDevice('Mobile');\n      }\n    });\n  }\n};\nwindow.MP_Editor = MP_Editor;\n\n//# sourceURL=webpack://merapipanel/./merapi/src/_editor.js?");

/***/ })

}]);