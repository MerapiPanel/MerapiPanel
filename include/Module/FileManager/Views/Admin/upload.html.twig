{% extends "@panel/base.html.twig" %}


{% block breadcrumb_item %}
<li class="breadcrumb-item"><a href="{{ '/' | access_path }}">Home</a></li>
<li class="breadcrumb-item"><a href="{{ '/filemanager' | access_path }}">FileManager</a></li>
<li class="breadcrumb-item active" aria-current="page">Upload</li>
{% endblock %}


{% block title %}Upload{% endblock %}


{% block subheader_outer %}{% endblock %}


{% block stylesheet %}
{{ parent() }}
<style>
    #select-file {
        cursor: pointer;
        min-height: 500px;
        color: #0088ff;
        border: 1px solid #0088ff;
        border-radius: 0.3rem;
        margin: 1rem;
    }
</style>
{% endblock %}


{% block content %}
<div class="row">
    <div class="col-12 col-lg-6">
        <a href="{{ '/filemanager' | access_path }}?d={{ request.d }}"
            class="btn btn-outline-primary m-1 text-decoration-none">Back to File Manager</a>
        <div class="text-center flex-grow-1 d-flex flex-column justify-content-center align-items-center"
            id="select-file">
            <svg xmlns="http://www.w3.org/2000/svg" width="45" height="45" fill="currentColor" class="bi bi-upload"
                viewBox="0 0 16 16">
                <path
                    d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5" />
                <path
                    d="M7.646 1.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 2.707V11.5a.5.5 0 0 1-1 0V2.707L5.354 4.854a.5.5 0 1 1-.708-.708z" />
            </svg>
            <span class="d-block mt-3 fw-semibold fs-4">Select file here...</span>
            <small>target folder {{ request.d | replace({'//': './'}) }}</small>
        </div>
    </div>
    <div class="col-12 col-lg-6">
        <div class="w-100 py-3" id="selected-file">
            <div class="d-flex align-items-center justify-content-center" style="height: 50vh;">
                <h2>No Selected Files</h2>
            </div>
        </div>
    </div>
</div>

{% endblock %}

{% block javascript %}
{{ parent() }}
<script>

    const files = [];

    $(document).ready(function () {
        $('#select-file').on('click', function () {
            $(`<input type="file" multiple/>`)
                .on('change', () => {
                    files.push(...event.target.files);
                    renderSelectedFiles();
                })
                .trigger('click');
        });
    });



    function renderSelectedFiles() {

        $(`#selected-file`)
            .html("")
            .append(Object.keys(files).map(function (key) {
                return $(`<div>`)
                    .addClass("px-3 py-2")
                    .append(`<span class='fw-semibold'>${files[key].name}</span>`)
                    .append(`<span class='ms-3'>${formatSize(files[key].size)}</span>`)
                    .append(`<a href="javascript:void(0)" class="ms-3 text-danger" onclick="event.preventDefault(); files.splice(${key}, 1); renderSelectedFiles();">Remove</a>`)
            }))
            .append(`<span class="mx-3 fw-semibold">total size : ${formatSize(files.reduce((a, b) => a + b.size, 0))}</span>`)
            .append(
                $(`<button type="submit" class="btn btn-primary mt-3 w-100">Upload</button>`)
                    .on("click", handleUpload)
            );

        if (files.length <= 0) {
            $(`#selected-file`)
                .html("")
                .append(`<div class="d-flex align-items-center justify-content-center" style="height: 50vh;"><h2>No Selected Files</h2></div>`);
        }
    }


    function handleUpload(evt) {

        $(`#selected-file`).html("")

        for (const i in files) {
            const progressbar = $("<div class='progress'>")
                .css({
                    position: "relative"
                })
                .append(
                    $("<div class='progress-bar bg-primary progress-bar-striped rounded-0 bg-opacity-75 position-absolute h-100'>")
                        .css({
                            position: "absolute",
                            left: 0,
                            top: 0,
                        })
                )

            const file = files[i];

            $(`#selected-file`)
                .append(
                    $(`<div class='position-relative'>`)
                        .append(
                            $("<div class='px-3 py-2'>")
                                .append(`<span class='fw-semibold'>${file.name}</span>`)
                                .append(`<span class='ms-3'>${formatSize(file.size)}</span>`)
                        )
                        .append(progressbar)
                )

            const xhr = new XMLHttpRequest();

            xhr.upload.onprogress = function (e) {

                if (e.lengthComputable) {
                    var complete = Math.ceil(e.loaded / e.total * 100);
                    progressbar.find('.progress-bar').css('width', "".concat(complete, "%"));
                    if (complete == 100) {
                        progressbar.find('.progress-bar').text("Success");
                        $(progressbar.parent()
                            .find(">div"))
                            .append(
                                $(`<a href="{{ '/filemanager' | access_path }}?d={{ request.d }}/${file.name}" class="ms-3">View</a>`)
                            )
                        files.splice(i, 1);
                    }
                }
            }

            xhr.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    console.log(this.responseText);
                    files.splice(i, 1);
                    progressbar.find('.progress-bar').css('width', "100%");
                }
            }

            xhr.open("POST", "{{ '/api/filemanager/upload' | access_path }}");

            const formData = new FormData();
            formData.append("files[0]", file);
            formData.append("parent", "{{ request.d | replace({'//': './'}) }}".length > 0 ? "{{ request.d | replace({'//': './'}) }}" : "/");
            xhr.send(formData);
        }

    }


    function formatSize(bytes) {
        if (bytes === 0) {
            return '0 Bytes';
        }
        var k = 1000,
            dm = 3,
            sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],
            i = Math.floor(Math.log(bytes) / Math.log(k));
        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
    }
</script>
{% endblock %}