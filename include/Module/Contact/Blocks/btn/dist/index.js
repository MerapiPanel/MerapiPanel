(()=>{function t(t){return function(t){if(Array.isArray(t))return e(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,a){if(t){if("string"==typeof t)return e(t,a);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?e(t,a):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function e(t,e){(null==e||e>t.length)&&(e=t.length);for(var a=0,n=new Array(e);a<e;a++)n[a]=t[a];return n}BlockRegister({init:function(){this.on("change:attributes:contact-type",this.handleTypeChange),this.on("change:attributes:use_template",this.handleUseTemplateChange),this.on("change",this.handleUpdate),this.handleUseTemplateChange.call(this)},updated:function(t,e,a){"selected"==e&&this.handleSelected.call(this)},handleSelected:function(t){this.updateTraits.call(this)},handleTypeChange:function(){this.updateTraits.call(this)},updateTraits:function(){var e=this.defaults.fetchURL,a=this.getAttributes()["contact-type"],n=this.getTrait("contact");e&&n&&__.http.post(e,{"contact-type":a}).then((function(e){if(!e.data||0===e.data.length)return n.set("value",""),void n.set("options",[{id:"",name:"-- Select Contact --"}]);n.set("options",[{id:"",name:"-- Select Contact --"}].concat(t(e.data.map((function(t){return{id:"CT-".concat(t.id),name:t.name}})))))})).catch((function(t){__.toast(t.message||"Something went wrong",5,"text-danger")}))},handleUseTemplateChange:function(){var e=this.defaults.templateFetchURL;if(this.getAttributes().use_template){this.removeTrait("contact-type"),this.removeTrait("contact"),this.addTrait({name:"template",type:"select",label:"Template",options:[{id:"",name:"-- Select Template --"}]});var a=this.getTrait("template");if(!e||!a)return;__.http.get(e).then((function(e){e.data&&0!==e.data.length&&a.set("options",[{id:"",name:"-- Select Template --"}].concat(t((e.data||[]).map((function(t){return{id:"TP-".concat(t.id),name:t.name}})))))})).catch((function(t){__.toast(t.message||"Something went wrong",5,"text-danger")}))}else this.removeTrait("template"),this.addTrait({type:"select",name:"contact-type",label:"Contact Type",options:[{id:"phone",label:"Phone"},{id:"email",label:"Email"},{id:"whatsapp",label:"Whatsapp"}]}),this.addTrait({type:"select",name:"contact",label:"Contact",options:[{id:"",name:"-- Select Contact --"}]}),this.updateTraits()}})})();