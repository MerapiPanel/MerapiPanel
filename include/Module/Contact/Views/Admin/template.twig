{% extends "@panel/base.html.twig" %}



{% block header_title %}Contact Template{% endblock %}


{% block breadcrumb_item %}
<li class="breadcrumb-item"><a href="{{ '/' | access_path }}">Home</a></li>
<li class="breadcrumb-item"><a href="{{ '/contact' | access_path }}">Contact</a></li>
<li class="breadcrumb-item active" aria-current="page">Template</li>
{% endblock %}


{% block subheader_search %}
<select class="form-select border-0" name="filter" id="filter-contact" style="box-shadow: none;">
	<option value="">-- Filter --</option>
	<option value="phone">Phone</option>
	<option value="email">Email</option>
	<option value="whatsapp">Whatsapp</option>
</select>
{% endblock %}



{% block subheader_menu %}
{% if _box.Contact.getRoles.isAllowed(4) %}
<a class="menu-item" href="{{ '/contact/template/add' | access_path }}">Add Template</a>
{% endif %}
{% endblock %}


{% set total = _box.Contact.template.count %}

{% block content %}

<div class="row">
	<div class="col-12 col-lg-7">
		<ul class="list-group list-group-flush px-2 py-1" id="template-list">
			{% for i in 1..total %}
			<li class="list-group-item placeholder-glow">
				<span class="placeholder bg-primary bg-opacity-75 col-4"></span>
				<div class="placeholder bg-secondary bg-opacity-75 col-8"></div>
			</li>
			{% endfor %}
		</ul>
	</div>
</div>
{% endblock %}


{% block javascript %}
{{ parent() }}
<script>
	__.Contact.Template = "CreateProperty";
	__.Contact.on("property:Template", function () {
		__.Contact.Template.fetchURL = "{{ '/api/Contact/Template/fetchAll' | access_path }}";
	})
	
</script>
<script src="{{ '@contact/dist/template.js' | assets }}?v={{ time() }}"></script>
<script>
	const template =__.Contact.Template;
	template.el = $('#template-list');
	template.render.call($('#template-list')[0]);
	template.on('edit', function (e, item) {
		if (!item.id) {
			__.toast('Invalid template', 5, 'text-danger');
			return;
		}
		window.location.href = "{{ '/contact/template/edit' | access_path }}/" + item.id
		e.preventDefault();
		e.stopImmediatePropagation();
	});
	template.on('delete', function (e, item) {
		if (!item.id) {
			__.toast('Invalid template', 5, 'text-danger');
			return;
		}
		return new Promise(function (resolve, reject) {
			__.dialog.confirm('Are you sure?', `Are you sure you want to delete <b>${item.name}</b>?`)
				.then(function () {
					__.http.post("{{ '/api/Contact/Template/delete' | access_path }}", { id: item.id })
						.then(function (response) {
							resolve();
						})
						.catch(function (error) {
							reject();
						});
				})
				.catch(function () {
					reject();
				});
		});
	});
	$('#filter-contact').on('change', function () {
		template.filter = $(this).val();
		template.render();
	})
</script>
{% endblock %}