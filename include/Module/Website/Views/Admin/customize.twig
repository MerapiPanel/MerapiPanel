{% extends "@editor/base.html.twig" %}

{% block stylesheet %}
{{parent()}}
<style>
	.pages-manager {
		display: flex;
	}
	.patterns-manager .gjs-block {
		width: 100%;
	}
</style>
{% endblock %}

{% block config %}
{{ editor_config({
	config: {
		width: "100vw",
		height: "100vh",
		container: "#editor",
		canvas: {
			styles: [
				"/vendor/bootstrap/css/bootstrap.min.css" | assets
			],
			scripts: [
				"/vendor/bootstrap/js/bootstrap.bundle.min.js" | assets
			]
		},
		pluginsOpts: {
			CodeEditor: {
				editable: true
			}
		},
		assetManager: {
			custom: true,
			assets: [],
			upload: "/api/FileManager/upload" | access_path,
			uploadName: "files",
			fetch: "/api/FileManager/fetchFile?start=0&limit=10"|access_path
		}
	},
	fetchBlockURL: "/editor/api/load" | access_path
}) }}
{% endblock %}

{% block javascript %}
{{ parent() }}

<script>

	__.website = { pattern: {} };
	__.website.pattern.listpops = function (callback) {
		fetch("{{'/api/Website/Fragments/listpops'|access_path}}")
			.then(response => response.json())
			.then(response => callback(response.data));
	}
	__.website.saveURL = "{{ '/api/Website/Pages/save' | access_path | url }}";

	fetch("{{'/api/Website/Pages/fetchAll'|access_path}}")
		.then(response => response.json())
		.then(response => {
			__.website.pages = response.data;
		});
	__.website.testVariable = function (data) {

		const formData = new FormData();

		Object.keys(data).forEach(function (key) {

			if (typeof data[key] == "object" || Array.isArray(data[key])) {
				Object.keys(data[key]).forEach(function (k) {
					if (typeof data[key][k] == "object" || Array.isArray(data[key][k])) {
						Object.keys(data[key][k]).forEach(function (kk) {
							formData.append(`${key}[${k}][${kk}]`, data[key][k][kk]);
						});
					} else {
						formData.append(`${key}[${k}]`, data[key][k]);
					}
				})
			} else {
				formData.append(key, data[key]);
			}
		});
		return new Promise(function (resolve, reject) {
			__.http.post("{{ '/api/Website/Variable/test' | access_path }}", formData)
				.then(function (response) {
					if (response.code == 200) {
						resolve(response.data);
					} else {
						reject(response.message || "Error: Please try again!");
					}
				})
				.catch(error => {
					reject(error);
				});
		});
	}

	__.website.deletePage = function (page) {
		return new Promise(function (resolve, reject) {
			__.http.post("{{ '/api/Website/Pages/delete' | access_path }}", {
				id: page.id
			}).then(function (response) {
				if (response.code == 200) {
					resolve(response.data);
				} else {
					reject(response.message || "Error: Please try again!");
				}
			}).catch(error => {
				reject(error);
			});
		})
	}
</script>

<script src="{{ '@website/dist/customize.js' | assets }}?v={{ time() }}"></script>
{% endblock %}