{% extends "@panel/base.html.twig" %}

{% block head_javascript %}
<script src="{{ '@template/assets/dist/index.bundle.js' | assets }}"></script>
{% endblock %}

{% block header_title %}Category{% endblock %}

{% block subheader_menu %}
<button onclick="createNewCategory()" class="menu-item btn">
    Category <i class="text-[12px] fa fa-plus"></i>
</button>
{% endblock %}

{% block breadcrumb %}
<li class="breadcrumb-item"><a href="{{ '/' | admin_url }}">Home</a></li>
<li class="breadcrumb-item"><a href="{{ '/article' | admin_url }}">Article</a></li>
<li class="breadcrumb-item active" aria-current="page">Category</li>
{% endblock %}


{% set categories = admin.article_category.fetchAll %}


{% block content %}
<ul class="row list-none ps-2" id="category-list">
    {% for category in categories %}
    <li class="col-12 col-md-8">
        <div class="border-bottom p-3" id="category-{{ category.id }}">
            <h4 id="category-{{ category.id }}-name">{{ category.name }}</h4>

            <div class="text-[10px] text-slate-400 flex items-end">
                {% if category.id %}
                <div class="mb-2">
                    <span id="category-{{ category.id }}-id" class="font-semibold text-purple-400">#{{ category.id
                        }}</span>,
                    <span id="category-{{ category.id }}-updated">Edited {{ category.updated_at }}</span>,
                    <span id="category-{{ category.id }}-created" class="ms-2">Create {{ category.created_at
                        }}</span>
                </div>
                <div class="w-100 d-flex gap-2">
                    <button onclick="deleteCategory('{{ category.id }}')"
                        class="btn btn-sm border text-hover-danger">delete</button>
                    <button onclick="editCategory({name:'{{ category.name }}', id:'{{ category.id }}'})"
                        class="btn btn-sm border text-hover-primary">edit</button>
                </div>
                {% else %}
                <span class="italic">this is default category you can't edit or delete</span>
                {% endif %}
            </div>

        </div>
    </li>
    {% endfor %}
</ul>
{% endblock %}


{% block javascript %}
{{ parent() }}
<script>

    function deleteCategory(prop) {
        merapi.dialog.confirmDanger("Are you sure?", "Are you sure you want to delete this category?").then((act) => {
            if (act) {
                merapi.http.post("{{ '/article/endpoint/category/delete' | admin_url }}", { id: prop }).then((data, text, xhr) => {
                    if (xhr.status === 200 && data.code === 200) {
                        merapi.toast(data.message, 5, "text-success");
                        $("#category-" + prop).remove();
                    } else throw new Error(data.message, data.code);
                }).catch((err) => {
                    merapi.toast(err.message ?? err.statusText, 5, 'text-danger');
                })
            }
        })
    }



    function editCategory({ name, id }) {

        const body = $(`<div class='w-full'>
            <input class='text-input' type='text' min='3' value='${name}' placeholder='Category Name' invalid-message='Please enter category name, minimum 3 characters' required/>
            <small class="text-slate-400 hidden">Current name: <b>${name}</b></small>
        </div>`);


        const modal = merapi.createModal("Edit category", body, {
            positive: {
                callback: function () {

                    let input = body.find("input");

                    if (!$(input).validate()) {
                        merapi.toast("Please enter valid name", 5, 'text-warning');
                        return;
                    }

                    modal.hide();
                    // send request to server
                    merapi.http.post("{{ '/article/endpoint/category/edit' | admin_url }}", {
                        name: input.val(),
                        id: id
                    }).then((response, text, xhr) => {

                        if (xhr.status === 200 && response.code === 200)
                        // if request success with code 200
                        {
                            $("#category-" + id + "-name").text(response.data.name);
                            $("#category-" + id + "-updated").text("Edited " + response.data.updated_at);

                        }
                        else
                        // if request failed
                        {
                            throw new Error(response.message, response.code);
                        }

                    }).catch((err) => {
                        merapi.toast(err.message ?? err.statusText, 5, 'text-danger');
                    })
                }
            },
            negative: {
                callback: function () { modal.hide(); }
            }
        });

        let input = body.find("input");
        let timming = null;
        input.on("input", () => {
            if (timming) clearTimeout(timming);
            timming = setTimeout(() => {

                $(modal.container.action.positive).attr("disabled", true);

                if (input.val() === name) {
                    body.find("small").fadeOut(200);
                } else {
                    body.find("small").fadeIn(200);
                }

                if ($(input).validate()) {
                    $(modal.container.action.positive).attr("disabled", false);
                }
                input.trigger("focus");

            }, 200);
        })


        $(modal.container.action.positive).attr("disabled", true);
        setTimeout(() => $(input).trigger("focus"), 200);

        modal.show();
    }




    function createNewCategory() {

        const body = $(`<div class='w-full'>
            <input class='text-input' type='text' min='3' value='' placeholder='Category Name' invalid-message='Please enter category name, minimum 3 characters' required/>
        </div>`);


        const modal = merapi.createModal("Create category", body, {
            positive: {
                callback: function () {

                    let input = body.find("input");
                    if (!$(input).validate()) {
                        merapi.toast("Please enter valid name", 5, 'text-warning');
                        return;
                    }

                    modal.hide();
                    // send request to server
                    merapi.http.post("{{ '/article/endpoint/category/create' | admin_url }}", {
                        name: input.val()
                    }).then((response, text, xhr) => {

                        if (xhr.status === 200 && response.code === 200)
                        // if request success with code 200
                        {
                            let list = $(`<li>
                                <div id="category-${response.data.id}" class="block mb-3 shadow-sm bg-white px-4 py-2 rounded-md overflow-hidden max-w-[800px] w-full">
                                    <h4 id="category-${response.data.id}-name">${response.data.name}</h4>
                                    <div class="text-[10px] text-slate-400 flex items-end">
                                        <div>
                                            <span id="category-${response.data.id}-id" class="font-semibold text-purple-400">#${response.data.id}</span>,
                                            <span id="category-${response.data.id}-updated">Edited ${response.data.updated_at}</span>,
                                            <span id="category-${response.data.id}-created" class="ms-2">Create ${response.data.created_at}</span>
                                        </div>
                                        <div class="ms-auto">
                                            <button onclick="deleteCategory('${response.data.id}')" class="btn btn-sm hover:text-red-400 hover:bg-red-50">delete</button>
                                            <button onclick="editCategory({name:'${response.data.name}', id:'${response.data.id}'})" class="btn btn-sm hover:text-blue-400 hover:bg-blue-50">edit</button>
                                        </div>
                                    </div>
                                </div>
                            </li>`);
                            $("#category-list").append(list);

                            merapi.toast(response.message, 5, 'text-success');

                        }
                        else
                        // if request failed
                        {
                            throw new Error(response.message, response.code);
                        }

                    }).catch((err) => {
                        merapi.toast(err.message ?? err.statusText, 5, 'text-danger');
                    })
                }
            },
            negative: {
                callback: function () { modal.hide(); }
            }
        });

        let input = body.find("input");
        let timming = null;
        input.on("input", () => {
            if (timming) clearTimeout(timming);
            timming = setTimeout(() => {

                $(modal.container.action.positive).attr("disabled", true);

                if (input.val() === name) {
                    body.find("small").fadeOut(200);
                } else {
                    body.find("small").fadeIn(200);
                }

                if ($(input).validate()) {
                    $(modal.container.action.positive).attr("disabled", false);
                }
                input.trigger("focus");

            }, 200);
        })


        $(modal.container.action.positive).attr("disabled", true);
        setTimeout(() => $(input).trigger("focus"), 200);

        modal.show();

    }

</script>
{% endblock %}