name: Prepare Release

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    environment: release

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.GH_TOKEN }}

      - name: Add third-party repository for PHP
        run: |
          if ! grep -q "^deb .*/ondrej/php" /etc/apt/sources.list /etc/apt/sources.list.d/*; then
            sudo add-apt-repository -y ppa:ondrej/php
            sudo apt-get update
          fi

      - name: Install PHP 8.3 and Composer
        run: |
          if ! php -v | grep -q "PHP 8.3"; then
            sudo apt-get install -y php8.3-cli php8.3-xml
            sudo update-alternatives --set php /usr/bin/php8.3
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            php composer-setup.php --install-dir=/usr/local/bin --filename=composer
            php -r "unlink('composer-setup.php');"
          fi

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --no-dev --prefer-dist --optimize-autoloader --no-progress

      - name: Prepare Git config
        run: |
          git config --local user.email "durianbohong@gmail.com"
          git config --local user.name "il4mb"

      - name: Push vendor
        run: |
          git add -f vendor
          git commit -m "Add vendor directory for release" || echo "No changes to commit"
          git push origin main

      - name: Initialize submodules
        run: |
          git submodule update --init --recursive
          git submodule foreach --recursive git checkout main
          git submodule foreach --recursive git pull origin main

      - name: Get Release Tag
        id: get_tag
        run: echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: "Release ${{ env.RELEASE_TAG }}"
          draft: false
          prerelease: false
          body: "Release with vendor files included."

  cleanup:
    runs-on: ubuntu-latest
    needs: prepare-release
    if: always() # Ensures this job runs regardless of the success or failure of the previous job
    env:
      BRANCH_NAME: release

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Git prepare
        run: |
          git config --local user.email "durianbohong@gmail.com"
          git config --local user.name "il4mb"
          git checkout main
          git pull origin main

      - name: Remove vendor directory from release branch
        run: |
          git rm -r --cached vendor
          git commit -m "Remove vendor directory from release branch" || echo "No changes to commit"
          git push origin main

      - name: Remove release branch
        run: |
          git push origin --delete release
